package main

import "strconv"

// Main chat page template
templ ChatPage() {
	<!DOCTYPE html>
	<html lang="en">
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<title>Go WASM Chat with Templ</title>
		@ChatStyles()
	</head>
	<body>
		@ChatContainer()
		@Scripts()
	</body>
	</html>
}

// CSS styles component
templ ChatStyles() {
	<style>
		body {
			font-family: Arial, sans-serif;
			margin: 0;
			padding: 20px;
			background-color: #f0f0f0;
			height: 100vh;
			box-sizing: border-box;
		}
		.chat-container {
			max-width: 800px;
			margin: 0 auto;
			background: white;
			border-radius: 10px;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			height: calc(100vh - 40px);
			display: flex;
			flex-direction: column;
		}
		.chat-header {
			background-color: #4caf50;
			color: white;
			padding: 1rem;
			border-radius: 10px 10px 0 0;
			text-align: center;
		}
		.chat-messages {
			flex: 1;
			padding: 1rem;
			overflow-y: auto;
			border-bottom: 1px solid #eee;
		}
		.message {
			margin-bottom: 1rem;
			padding: 0.5rem;
			border-radius: 5px;
			background-color: #f9f9f9;
		}
		.message-user {
			font-weight: bold;
			color: #4caf50;
			margin-bottom: 0.25rem;
		}
		.message-text {
			color: #333;
		}
		.message-time {
			font-size: 0.8rem;
			color: #666;
			margin-top: 0.25rem;
		}
		.chat-input {
			display: flex;
			padding: 1rem;
			gap: 0.5rem;
		}
		.username-input {
			flex: 0 0 150px;
			padding: 0.5rem;
			border: 1px solid #ddd;
			border-radius: 5px;
			font-size: 1rem;
		}
		.message-input {
			flex: 1;
			padding: 0.5rem;
			border: 1px solid #ddd;
			border-radius: 5px;
			font-size: 1rem;
		}
		.send-button {
			padding: 0.5rem 1rem;
			background-color: #4caf50;
			color: white;
			border: none;
			border-radius: 5px;
			cursor: pointer;
			font-size: 1rem;
		}
		.send-button:hover {
			background-color: #45a049;
		}
		.clear-button {
			padding: 0.5rem 1rem;
			background-color: #f44336;
			color: white;
			border: none;
			border-radius: 5px;
			cursor: pointer;
			font-size: 1rem;
		}
		.clear-button:hover {
			background-color: #da190b;
		}
		.toggle-stats {
			background-color: #008cba;
			color: white;
			border: none;
			padding: 0.5rem 1rem;
			border-radius: 5px;
			cursor: pointer;
			font-size: 0.9rem;
		}
		.toggle-stats:hover {
			background-color: #007b9a;
		}
		.stats-section {
			padding: 1rem;
			border-bottom: 1px solid #eee;
			background-color: #f9f9f9;
		}
		.chart-container {
			width: 100%;
			height: 300px;
			position: relative;
			margin-top: 1rem;
			display: flex;
			justify-content: center;
			align-items: center;
		}
		.chart-container canvas {
			max-width: 100%;
			max-height: 100%;
		}
		.stats-text {
			margin-bottom: 1rem;
		}
		.stats-text h3 {
			margin-top: 0;
			margin-bottom: 1rem;
			text-align: center;
		}
		.users-container {
			display: flex;
			flex-wrap: wrap;
			gap: 1rem;
			margin-top: 1rem;
			justify-content: center;
		}
		.user-card {
			display: flex;
			align-items: center;
			background: white;
			border: 1px solid #ddd;
			border-radius: 8px;
			padding: 0.75rem;
			min-width: 150px;
			box-shadow: 0 2px 4px rgba(0,0,0,0.1);
			transition: transform 0.2s;
		}
		.user-card:hover {
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(0,0,0,0.15);
		}
		.user-avatar {
			width: 40px;
			height: 40px;
			border-radius: 50%;
			background: linear-gradient(45deg, #4CAF50, #45a049);
			color: white;
			display: flex;
			align-items: center;
			justify-content: center;
			font-weight: bold;
			margin-right: 0.75rem;
			text-transform: uppercase;
		}
		.user-info {
			flex: 1;
		}
		.user-name {
			font-weight: bold;
			color: #333;
			margin-bottom: 0.25rem;
		}
		.user-count {
			font-size: 0.9rem;
			color: #666;
		}
		.total-messages {
			text-align: center;
			font-size: 1.1rem;
			font-weight: bold;
			color: #4CAF50;
			margin: 1rem 0;
		}
		.notification {
			position: fixed;
			top: 20px;
			right: 20px;
			display: flex;
			align-items: center;
			padding: 1rem;
			border-radius: 8px;
			box-shadow: 0 4px 12px rgba(0,0,0,0.15);
			z-index: 1000;
			min-width: 250px;
			animation: slideIn 0.3s ease-out;
		}
		@keyframes slideIn {
			from {
				transform: translateX(100%);
				opacity: 0;
			}
			to {
				transform: translateX(0);
				opacity: 1;
			}
		}
		.notification-success {
			background: #d4edda;
			border: 1px solid #c3e6cb;
			color: #155724;
		}
		.notification-error {
			background: #f8d7da;
			border: 1px solid #f5c6cb;
			color: #721c24;
		}
		.notification-info {
			background: #d1ecf1;
			border: 1px solid #bee5eb;
			color: #0c5460;
		}
		.notification-icon {
			font-size: 1.2rem;
			margin-right: 0.75rem;
			font-weight: bold;
		}
		.notification-text {
			flex: 1;
		}
		.notification-close {
			background: none;
			border: none;
			font-size: 1.2rem;
			cursor: pointer;
			margin-left: 0.75rem;
			padding: 0;
			width: 20px;
			height: 20px;
			display: flex;
			align-items: center;
			justify-content: center;
			opacity: 0.7;
		}
		.notification-close:hover {
			opacity: 1;
		}
	</style>
}

// Main chat container
templ ChatContainer() {
	<div class="chat-container">
		@ChatHeader()
		@StatsSection()
		@MessagesArea()
		@ChatInput()
	</div>
}

// Chat header component
templ ChatHeader() {
	<div class="chat-header">
		<h1>Go WASM Chat with Templ</h1>
	</div>
}

// Statistics section
templ StatsSection() {
	<div class="stats-section hidden" id="statsSection">
		<div class="stats-text" id="statsText">
			<h3>Message Statistics</h3>
			<p>Loading...</p>
		</div>
		<div class="chart-container">
			<canvas id="messageChart"></canvas>
		</div>
	</div>
}

// Messages area
templ MessagesArea() {
	<div class="chat-messages" id="messages"></div>
}

// Chat input area
templ ChatInput() {
	<div class="chat-input">
		<input
			type="text"
			id="username"
			class="username-input"
			placeholder="Your name"
			value="User"
		/>
		<input
			type="text"
			id="messageInput"
			class="message-input"
			placeholder="Type your message..."
			onkeypress="if(event.key==='Enter') addMessage()"
		/>
		<button onclick="addMessage()" class="send-button">Send</button>
		<button onclick="clearMessages()" class="clear-button">Clear</button>
		<button onclick="toggleStats()" class="toggle-stats">Show Stats</button>
	</div>
}

// Scripts section
templ Scripts() {
	<script src="node_modules/chart.js/dist/chart.umd.js"></script>
	<script src="wasm_exec.js"></script>
	<script>
		const go = new Go();
		WebAssembly.instantiateStreaming(
			fetch("main.wasm"),
			go.importObject,
		).then((result) => {
			go.run(result.instance);
		});
	</script>
}

// User card component
templ UserCard(username string, messageCount int) {
	<div class="user-card">
		<div class="user-avatar">
			if len(username) > 0 {
				{ string(username[0]) }
			} else {
				?
			}
		</div>
		<div class="user-info">
			<div class="user-name">{ username }</div>
			<div class="user-count">{ strconv.Itoa(messageCount) } messages</div>
		</div>
	</div>
}

// Notification component
templ Notification(message, notificationType string) {
	<div class={ "notification", "notification-" + notificationType }>
		<div class="notification-icon">
			switch notificationType {
				case "success":
					✓
				case "error":
					✗
				case "info":
					ℹ
				default:
					!
			}
		</div>
		<div class="notification-text">{ message }</div>
		<button class="notification-close" onclick="this.parentElement.remove()">×</button>
	</div>
}

// Message component
templ MessageComponent(username, text, timestamp string) {
	<div class="message">
		<div class="message-user">{ username }</div>
		<div class="message-text">{ text }</div>
		<div class="message-time">{ timestamp }</div>
	</div>
}